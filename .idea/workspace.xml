<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d3b2fd96-b9ee-429c-bcd2-d7174ec17ba4" name="更改" comment="1">
      <change afterPath="$PROJECT_DIR$/test-api/Dockerfile-goods-web" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test-service/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/test-service/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test-service/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/test-service/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test-service/user_srv/main.exe" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://E:/golang_sdk/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2lp5tQ1ZUi2JB2yXWThWgtqUYtz" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go 构建.go build 1.go (1).executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build 1.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go (1).executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build test-api/goods-web.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build test-api/user-web.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build test-service/goods_srv/test.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build test-service/inventory_srv.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build test-service/inventory_srv/model/main.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build test-service/user_srv.executor&quot;: &quot;Run&quot;,
    &quot;Go 测试.test-service/goods_srv/handler 中的 TestGoodsServer_CreateGoods.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowPanel.toolwindow.highlight.mappings&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowPanel.toolwindow.highlight.symlinks&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowPanel.toolwindow.show.date&quot;: &quot;false&quot;,
    &quot;WebServerToolWindowPanel.toolwindow.show.permissions&quot;: &quot;false&quot;,
    &quot;WebServerToolWindowPanel.toolwindow.show.size&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/HealthProject&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\go-learn\go_micro_service_test\test-api\user-web\utils" />
      <recent name="D:\go-learn\go_micro_service_test\test-api\goods-web\proto" />
      <recent name="D:\go-learn\go_micro_service_test\test-api" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\go-learn\go_micro_service_test\test-api" />
      <recent name="D:\go-learn\go_micro_service_test\test-api\goods-web\api\goods" />
    </key>
  </component>
  <component name="RunManager" selected="Go 构建.go build main.go (1)">
    <configuration name="go build 1.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_micro_service_test" />
      <working_directory value="$PROJECT_DIR$/test-service" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test-service/inventory_srv/test/1.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_micro_service_test" />
      <working_directory value="$PROJECT_DIR$/test-api" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test-api/goods-web/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_micro_service_test" />
      <working_directory value="$PROJECT_DIR$/test-service" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test-service/goods_srv/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build test-service/inventory_srv" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_micro_service_test" />
      <working_directory value="$PROJECT_DIR$/test-service" />
      <kind value="PACKAGE" />
      <package value="test-service/inventory_srv" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test-service/inventory_srv/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build test-service/inventory_srv/model/main" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_micro_service_test" />
      <working_directory value="$PROJECT_DIR$/test-service" />
      <kind value="PACKAGE" />
      <package value="test-service/inventory_srv/model/main" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test-service/inventory_srv/model/main/main.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build main.go (1)" />
        <item itemvalue="Go 构建.go build 1.go (1)" />
        <item itemvalue="Go 构建.go build test-service/inventory_srv" />
        <item itemvalue="Go 构建.go build test-service/inventory_srv/model/main" />
        <item itemvalue="Go 构建.go build main.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-b97fc8a1e17c-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.14494.238" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-GO-241.14494.238" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="电商服务2" />
    <MESSAGE value="电商服务3" />
    <MESSAGE value="电商服务完结" />
    <MESSAGE value="电商web层1" />
    <MESSAGE value="电商web层1修改" />
    <MESSAGE value="电商web层2+修改" />
    <MESSAGE value="电商web层3+修改" />
    <MESSAGE value="电商商品web层4+修改" />
    <MESSAGE value="库存" />
    <MESSAGE value="库存2" />
    <MESSAGE value="1" />
    <option name="LAST_COMMIT_MESSAGE" value="1" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/test-service/user_srv/initialize/config.go</url>
          <line>19</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/go_micro_service_test$go_build_test_service_user_srv.out" NAME="go build test-service/user_srv 覆盖结果" MODIFIED="1726816381522" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>